Нужно написать сервис на FastAPI, который реализует функционал продвинутого калькулятора. 
Работать должно примерно так:

в POST-запросе мы посылаем сервису большую строку с большим арифметическим выражением,
 например, вида (1 + 2 + 3 +4) / (9 * 6 + 9) - 10 и в ответ получаем либо готовый ответ 
(`-9.841269841269842`) либо некоторый идентификатор, если выражение очень большое и требует времени на разбор и вычисление.
 По этому идентификаттору через GET-запрос можно получать 
либо статус (еще вычисляется) либо уже результат - число. 
Чтобы сымитировать медленность выполнения каких то операций - можно какую то арифметическую операцию искусственно «замедлить».

То есть, сервис должен выполнить разбор большого выражения, и вычислить его.
 Так как выражения могут быть большие, то каким нибудь встроенным способом типа eval не воспользуешься. 
Надо самому разбирать в асинхронном режиме, и вычислять.

Бонус 1 (необязательный к выполнению): написать нагрузочные тесты, которые сгенерируют выражения произвольной длины и сложности,
 и в параллели (в несколько сотен запросо одновременно) 
нападут на сервис.

Бонус 2 (необязательный к выполнению): в разбор выражений добавить 
разбор выражений вида fun FunName(ArgumentsList) -> <арифметическое выражение, которое может содержать вызов функции 
вида FunName(ArgumentsSeperatedByComma)>
